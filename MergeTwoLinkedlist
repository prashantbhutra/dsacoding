#include<bits/stdc++.h>
using namespace std;

class Linkedlist{

    public:

    int data;
    Linkedlist *next;

    Linkedlist(int data){

        this->data=data;
        this->next=NULL;
    }

};

void insertAtTail(Linkedlist* &head,int val){
    
    Linkedlist *n = new Linkedlist(val);
    if(head==NULL){
        head=n;
        return;
    }

    Linkedlist *temp=head;

    while(temp->next!=NULL){
        temp=temp->next;
    }

    temp->next=n;
}


void display(Linkedlist *head){

    Linkedlist *temp=head;

    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}

Linkedlist* merge(Linkedlist* &head1 , Linkedlist* &head2){
    
    Linkedlist* ptr1 = head1;
    Linkedlist* ptr2 = head2;
    Linkedlist* DummyNode = new Linkedlist(-1);
    Linkedlist* ptr3 = DummyNode;
    
    while(ptr1!=NULL && ptr2!=NULL){
        
        if(ptr1->data < ptr2->data){
            
            ptr3->next=ptr1;
            ptr1=ptr1->next;
            
        }
        else{
            
            ptr3->next=ptr2;
            ptr2=ptr2->next;
        }
        ptr3=ptr3->next;
    }
    
    while(ptr1!=NULL){
        
        ptr3->next=ptr1;
        ptr1=ptr1->next;
        ptr3=ptr3->next;
    }
    
    while(ptr2!=NULL){
        
        ptr3->next=ptr2;
        ptr2=ptr2->next;
        ptr3=ptr3->next;
    }
    
    return DummyNode->next;
     
}

Linkedlist* mergeRecursive(Linkedlist* &head1 , Linkedlist* &head2){
    
    if(head1==NULL){
        return head2;
    }
    
     if(head2==NULL){
        return head1;
    }
    
    Linkedlist* result;
    
    if(head1->data < head2->data){
        
        result=head1;
        result->next=mergeRecursive(head1->next,head2);
        
    }
    else{
        result=head2;
        result->next=mergeRecursive(head2->next,head1);
    }
    
    return result;
    
}

int main(){

    Linkedlist* head1=NULL;
    Linkedlist* head2=NULL;
    
    int arr1[]={1,4,5,7,8,11};
    int arr2[]={2,3,6,9,10};
    
    for(int i=0;i<6;i++){
        insertAtTail(head1,arr1[i]);
    }
    for(int i=0;i<5;i++){
        insertAtTail(head2,arr2[i]);
    }
    
    display(head1);
    display(head2);
    
   Linkedlist* newHead=merge(head1,head2);
   display(newHead); 
    
    
    return 0;
}