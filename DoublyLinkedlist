
#include<bits/stdc++.h>
using namespace std;

class  Linkedlist{

    public:

    int data;
    Linkedlist* next;
    Linkedlist* prev;

    Linkedlist(int data){
        this->data=data;
        this->next=NULL;
        this->prev=NULL;

    }

};

void insertAtHead(Linkedlist* &head,int val){

    Linkedlist* n = new Linkedlist(val);

    n->next=head;
    if(head!=NULL){
       head->prev=n;  
    }

    head=n;
    
}


void insertAtTail(Linkedlist* &head,int val){

    if(head==NULL){
        insertAtHead(head,val);
        return;
    }

    Linkedlist* n = new Linkedlist(val);
    Linkedlist* temp = head;

    while(temp->next!=NULL){
        temp=temp->next;

    }

    temp->next=n;
    n->prev=temp;
}

void deleteAtHead(Linkedlist* &head){

    Linkedlist* todelete=head;
    head=head->next;
    head->prev=NULL;

    delete todelete;
}


void deletion(Linkedlist* &head, int pos){

    if(pos==1){
        deleteAtHead(head);
        return;
    }

    Linkedlist *temp=head;
    int count=1;

    while(temp!=NULL && count!=pos){

        temp=temp->next;
        count++;
    }

    temp->prev->next=temp->next;
    if(temp->next!=NULL){
         temp->next->prev=temp->prev;   
    }
    
    delete temp;
    
}


void display(Linkedlist* head){
    Linkedlist* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}

int main(){

    Linkedlist* head=NULL;
    insertAtTail(head,1);
    insertAtTail(head,2);
    insertAtTail(head,3);
    insertAtTail(head,4);
    insertAtTail(head,5);
    insertAtTail(head,6);
    display(head);
    insertAtHead(head,7);
    display(head);

    deletion(head,5);
    display(head);

    return 0;
}
