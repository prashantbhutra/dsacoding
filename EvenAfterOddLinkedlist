
// Even position of Linkedlist after odd position of Linkedlist

#include<bits/stdc++.h>
using namespace std;

class Linkedlist{

    public:

    int data;
    Linkedlist *next;

    Linkedlist(int data){

        this->data=data;
        this->next=NULL;
    }

};

void insertAtTail(Linkedlist* &head,int val){
    
    Linkedlist *n = new Linkedlist(val);
    if(head==NULL){
        head=n;
        return;
    }

    Linkedlist *temp=head;

    while(temp->next!=NULL){
        temp=temp->next;
    }

    temp->next=n;
}


void display(Linkedlist *head){

    Linkedlist *temp=head;

    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}

void evenafterodd(Linkedlist* &head){
    
    Linkedlist* odd = head;
    Linkedlist* even = head->next;
    Linkedlist* evenstart = even;
    
    while(odd->next!=NULL && even->next!=NULL){
        
        odd->next=even->next;
        odd=odd->next;
        even->next=odd->next;
        even=even->next;
        
    }
    odd->next=evenstart;
    if(odd->next==NULL){
        even->next=NULL;
    }
    
    
}

int main(){

    Linkedlist* head=NULL;
    int arr[]={1,2,3,4,5,6,7};
    for(int i=0;i<7;i++){
        insertAtTail(head,arr[i]);
    }
    display(head);
    evenafterodd(head);
    display(head);


    return 0;
}
